boxplot(trees$Volume, main= "Trees", xlab = "Volume")
boxplot(trees$Volume, main= "Trees", xlab = "Volume", col="blue", horizontal=TRUE )
boxplot(trees$Volume, main="Trees", xlab = "Volume", col="blue",outline=F )
#notch
boxplot( trees$Height, main="Trees", xlab = "Height", col="blue",  notch=TRUE )
#graphic data
boxplot.stats(trees$Height)
#read only one information
boxplot.stats(trees$Height)$stats
boxplot(trees)
InsectSprays
spray = aggregate(. ~ spray, data=InsectSprays,sum)
spray
#Execute with ctrl+shift+enter
barplot(spray$count,col= gray.colors(6), xlab="Spray", ylab="Total", names.arg=spray$spray)
box()
#Execute with ctrl+shift+enter
barplot(spray$count,col= gray.colors(6), xlab="Spray", ylab="Total", names.arg=spray$spray)
box()
pie(spray$count, labels= spray$spray, main="Spray",col=c(1:6))
pie(spray$count,labels=NA,  main="Spray",col=c(1:6))
legend("bottomright",legend=spray$spray ,cex=1, fill=c(1:6))
install.packages("stargazer")
library(stargazer)
stargazer(iris)
stargazer(iris, type="html")
stargazer(iris, type="text")
stargazer(women, out="women.tex", summary=FALSE)
#this package doesn't need to install!
library(lattice)
bwplot(trees$Volume)
bwplot(trees$Volume, main="Trees",xlab="Volume")
histogram(trees$Volume, main="Trees",xlab="Volume",aspect=1, type = "percent", nint=5 )
#Weight of chickens according to diet
chickwts
#histogram
histogram(chickwts$weight)
#we aggregate data
aggregate(chickwts$weight, by=list(chickwts$feed), FUN=sum)
#Conditional histogram
histogram( ~weight | feed, data=chickwts)
#CO2, conc: concentration of co2, uptake: capture of co2
CO2
xyplot(CO2$conc ~  CO2$uptake)
#type is the origin
xyplot(CO2$conc ~  CO2$uptake | CO2$Type)
#refrigerated or not
xyplot(CO2$conc ~  CO2$uptake | CO2$Treatment)
esoph
dotplot(esoph$alcgp ~ esoph$ncontrols, data=esoph)
dotplot(esoph$alcgp ~ esoph$ncontrols | esoph$tobgp)
splom(~CO2[4:5] | CO2$Type, CO2)
densityplot(~CO2$conc | CO2$Treatment, plot.points=FALSE)
densityplot(CO2$conc)
densityplot(~CO2$conc | CO2$Treatment)
densityplot(~CO2$conc | CO2$Treatment, plot.points=FALSE)
OrchardSprays
cloud(decrease ~  rowpos * colpos, data=OrchardSprays)
cloud(decrease ~  rowpos * colpos, groups=treatment, data=OrchardSprays)
trees
levelplot(Girth ~ Height * Volume, data=trees)
#color palette
library("RColorBrewer")
#color palette
install.packages("RColorBrewer")
#color palette
install.packages("RColorBrewer")
library("RColorBrewer")
data = read.csv('data.csv', sep=";")
head(data)
summary(data$VALOREMPENHO)
summary(data$PIB)
boxplot(data$VALOREMPENHO, main="Valores de Empenho", col = brewer.pal(n = 3, name = "Paired"), outline = F )
boxplot(data$PIB ,main="Valores de PIB", col = brewer.pal(n = 3, name = "Pastel1"), outline = F )
hist(data$VALOREMPENHO,main="Valores de Empenho", col = brewer.pal(n = 3, name = "Paired"))
hist(data$PIB,main="Valores de PIB", col = brewer.pal(n = 3, name = "Pastel1"), outline = F )
#Busca os maiores empenhos
#executar com ctrl + shif + enter
Mempenho = head(dados[order(-dados$VALOREMPENHO),],10)
#Search for the best values of empenhos
#executae with ctrl + shif + enter
Mempenho = head(data[order(-data$VALOREMPENHO),],10)
barplot(Mempenho$VALOREMPENHO, col=brewer.pal(n = 10, name = "RdBu"),las=2,main = "Maiores Empenhos")
legend("topright",legend=Mempenho$MUNICIPIO,col = brewer.pal(n = 10, name = "RdBu"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
#Maiores Pibs
#execute with ctrl + shif + enter
Mpibs =   head(data[order(-dados$PIB),],10)
#Maiores Pibs
#execute with ctrl + shif + enter
Mpibs =   head(data[order(-data$PIB),],10)
barplot(Mpibs$PIB,col=brewer.pal(n = 10, name = "Spectral"),las=2,main = "Maiores PIBS")
legend("topright",legend=Mempenho$MUNICIPIO,col = brewer.pal(n = 10, name = "Spectral"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
#Relationship between PIB and commitment
#Calculate what % of PIB was committed
dados$PROPORCAO =   dados$VALOREMPENHO  / dados$PIB
#Relationship between PIB and commitment
#Calculate what % of PIB was committed
data$PROPORCAO =   data$VALOREMPENHO  / data$PIB
Mprop = head(data[order(-data$PROPORCAO),],10)
barplot(Mprop$PROPORCAO,col=brewer.pal(n = 10, name = "Set2"),las=2,main = "Maiores Gastos em Proporção ao PIB")
legend("topright",legend=Mprop$MUNICIPIO,col = brewer.pal(n = 10, name = "Set2"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
#Relationship between PIB and commitment
#Calculate what % of PIB was committed
data$PROPORCAO =   data$VALOREMPENHO  / data$PIB
Mprop = head(data[order(-data$PROPORCAO),],10)
barplot(Mprop$PROPORCAO,col=brewer.pal(n = 10, name = "Set2"),las=2,main = "Maiores Gastos em Proporção ao PIB")
#legend("topright",legend=Mprop$MUNICIPIO,col = brewer.pal(n = 10, name = "Set2"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
#Relationship between PIB and commitment
#Calculate what % of PIB was committed
data$PROPORCAO =   data$VALOREMPENHO  / data$PIB
Mprop = head(data[order(-data$PROPORCAO),],10)
barplot(Mprop$PROPORCAO,las=2,main = "Maiores Gastos em Proporção ao PIB")
legend("topright",legend=Mprop$MUNICIPIO,col = brewer.pal(n = 10, name = "Set2"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
#Relationship between PIB and commitment
#Calculate what % of PIB was committed
data$PROPORCAO =   data$VALOREMPENHO  / data$PIB
Mprop = head(data[order(-data$PROPORCAO),],10)
barplot(Mprop$PROPORCAO,main = "Maiores Gastos em Proporção ao PIB")
legend("topright",legend=Mprop$MUNICIPIO,col = brewer.pal(n = 10, name = "Set2"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
#Relationship between PIB and commitment
#Calculate what % of PIB was committed
data$PROPORCAO =   data$VALOREMPENHO  / data$PIB
Mprop = head(data[order(-data$PROPORCAO),],10)
barplot(Mprop$PROPORCAO,col=brewer.pal(n = 10, name = "Spectral"),las=2,main = "Maiores Gastos em Proporção ao PIB")
legend("topright",legend=Mprop$MUNICIPIO,col = brewer.pal(n = 10, name = "Spectral"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
#Relationship between PIB and commitment
#Calculate what % of PIB was committed
data$PROPORCAO =   data$VALOREMPENHO  / data$PIB
Mprop = head(data[order(-data$PROPORCAO),],10)
barplot(Mprop$PROPORCAO,col=brewer.pal(n = 10, name = "Spectral"),las=2,main = "Maiores Gastos em Proporção ao PIB")
legend("topright",legend=Mprop$MUNICIPIO,col = brewer.pal(n = 10, name = "BuPu"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
#Relationship between PIB and commitment
#Calculate what % of PIB was committed
data$PROPORCAO =   data$VALOREMPENHO  / data$PIB
Mprop = head(data[order(-data$PROPORCAO),],10)
barplot(Mprop$PROPORCAO,col=brewer.pal(n = 10, name = "Spectral"),las=2,main = "Maiores Gastos em Proporção ao PIB")
legend("topright",legend=Mprop$MUNICIPIO,col = brewer.pal(n = 10, name = "Spectral"), lty=1:2, cex=0.8, ncol = 2,lwd=4)
box()
