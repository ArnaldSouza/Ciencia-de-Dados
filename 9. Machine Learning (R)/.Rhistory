install.packages("e1071")
install.packages("e1071")
install.packages("randomForest")
library(e1071)
library(randomForest)
credito = read.csv("./dados/Credit.csv")
credito = read.csv("./Credit.csv")
credito = read.csv("dados/Credit.csv")
credito = read.csv("./dados/Credit.csv")
library(e1071)
library(randomForest)
credito = read.csv("./dados/Credit.csv")
credito$class = as.factor(credito$class)
set.seed(234)
amostra = sample(2,1000,replace=T, prob=c(0.7,0.3))
creditotreino = credito[amostra==1,]
creditoteste = credito[amostra==2,]
modelo = svm(class ~., creditotreino)
predicao = predict(modelo,creditoteste)
confusao = table(creditoteste$class,predicao)
taxaacerto = (confusao[1] + confusao[4]) / sum(confusao)
taxaacerto
importancia  = randomForest(class ~ ., data = creditotreino)
importancia  = randomForest(class ~ ., data = creditotreino)
col = importance(importancia)
col = importance(importancia)
col
varImpPlot(importancia)
modelo = svm(class ~ credit_amount + age + duration + checking_status ,creditotreino)
predicao = predict(modelo,creditoteste)
confusao = table(creditoteste$class,predicao)
taxaacerto = (confusao[1] + confusao[4]) / sum(confusao)
taxaacerto
install.packages("class")
install.packages("class")
library(class)
head(iris)
summary(iris)
amostra = sample(2,150,replace=T, prob=c(0.7,0.3))
iristreino = iris[amostra==1,]
iristeste = iris[amostra==2,]
dim(iristreino)
dim(iristeste)
previsao = knn(iristreino[,1:4],iristeste[,1:4],iristreino[,5],k=3)
previsao
tabela = table(iristeste[,5],previsao)
tabela
(tabela[1] + tabela[5] + tabela[9]) / sum(tabela)
library(class)
head(iris)
summary(iris)
amostra = sample(2,150,replace=T, prob=c(0.7,0.3))
iristreino = iris[amostra==1,]
iristeste = iris[amostra==2,]
dim(iristreino)
dim(iristeste)
previsao = knn(iristreino[,1:4],iristeste[,1:4],iristreino[,5],k=3)
previsao
tabela = table(iristeste[,5],previsao)
tabela
(tabela[1] + tabela[5] + tabela[9]) / sum(tabela)
install.packages('randomForest')
install.packages('randomForest')
library(randomForest)
credito = read.csv('credit.csv')
install.packages('randomForest')
library(randomForest)
library(randomForest)
credito = read.csv('./dados/credit.csv')
credito = read.csv('./dados/credit.csv')
#transforma classe em fator
credito$class = as.factor(credito$class)
head(credito)
amostra = sample(2,1000,replace=T, prob=c(0.7,0.3))
creditotreino = credito[amostra==1,]
creditoteste = credito[amostra==2,]
floresta = randomForest(class ~ .,data=creditotreino, ntree=100,importance=T)
floresta
plot(floresta)
floresta
previsao = predict(floresta,creditoteste)
previsao
confusao = table(previsao,creditoteste$class)
confusao
taxaacerto = (confusao[1] + confusao[4]) / sum(confusao)
taxaacerto
